{% form_theme form '@RichIdTermsModule/_form-theme.html.twig' %}

{% include '@RichIdTermsModule/_loader.html.twig' %}
{% set publishedTermsAndDepublicationLocked = terms.published() and terms.depublicationLocked %}

<div class="terms-module-admin-body terms-module-admin-body-form ">
    <div class="terms-module-admin-edition-terms-name">{{ terms.name }}</div>

    {{ form_start(form, {'attr': {'id': 'terms-edition-form'}}) }}
        {{ form_row(form.isTermsPublished, {'attr': {'class': 'terms-module-form-field-small'}}) }}

        <div class="terms-module-admin-edition-terms-version-tags">
            {% for termsVersion in terms.versions|sort((a, b) => a.version <=> b.version) %}
                <div class="terms-version-tag {% if termsVersion.enabled %}enabled{% endif %}">
                    {% if termsVersion.isEnabled() %}
                        <i class="icon-lock"></i>
                    {% else %}
                        <i class="icon-sync-alt-regular"></i>
                    {% endif %}

                    {{ 'terms_module.admin.edit.version'|trans({'%version%': termsVersion.version}, 'terms_module') }}
                </div>
            {% endfor %}
        </div>

        <div class="terms-module-admin-edition-title-block terms-module-admin-row">
            <div class="terms-module-admin-edition-title terms-module-admin-col">{{ form_row(form.title, {'attr': {'class': 'terms-module-form-field-full'}}) }}</div>
            <div class="terms-module-admin-edition-publication-date terms-module-admin-col">{{ form_row(form.publicationDate, {'attr': {'class': 'terms-module-form-field-small'}}) }}</div>
        </div>

        {{ form_row(form.content, {'attr': {'class': 'terms-module-form-field-full'}}) }}

        <div class="terms-module-admin-edition-actions">
            <button type="button" class="terms-module-button-primary terms-module-action terms-module-action-space terms-module-open-loader" onclick="saveTerms()">{{ 'terms_module.admin.edit.save'|trans({}, 'terms_module') }}</button>
            <button type="button" class="terms-module-button-primary terms-module-action terms-module-action-space terms-module-open-loader" onclick="saveTerms(true)">{{ 'terms_module.admin.edit.save_and_exit'|trans({}, 'terms_module') }}</button>
            <a class="terms-module-link terms-module-action-space terms-module-open-loader" href="{{ path('module_terms_admin_list') }}">{{ 'terms_module.admin.edit.close'|trans({}, 'terms_module') }}</a>
        </div>
    {{ form_end(form) }}
</div>

{% include '@RichIdTermsModule/_load-picto.html.twig' %}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        window.saveTermsUrl = '{{ path('module_terms_admin_edition', {'terms': terms.id}) }}';
        window.saveTermsVersion = {% if app.request.query.has('version') %}'{{ app.request.query.get('version') }}'{% else %}null{% endif %};

        window.getSaveTermsUrl = function (exit) {
            if (typeof exit === 'undefined' || exit === null) {
                exit = false;
            }
            var data = [];

            if (window.saveTermsVersion !== null) {
                data.push('version=' + window.saveTermsVersion);
            }

            if (exit) {
                data.push('exit=true');
            }

            if (data.length === 0) {
                return window.saveTermsUrl;
            }

            return window.saveTermsUrl + '?' + data.join('&');
        }

        window.saveTerms = function (exit) {
            document.getElementById('{{ form.isTermsPublished.vars.id }}').disabled = false
            document.getElementById('terms-edition-form').action = window.getSaveTermsUrl(exit);
            document.getElementById('terms-edition-form').submit();
        }

        window.getTermsVersionTitle = function () {
            let field = document.getElementById('{{ form.title.vars.id }}');
            return field ? field.value : '';
        }

        window.getTermsVersionContent = function () {
            return CKEDITOR.instances.terms_version_form_content.getData();
        }

        window.computeTermsPublicationStatus = function () {
            let publishedTermsAndDepublicationLocked = {% if publishedTermsAndDepublicationLocked %}true{% else %}false{% endif %};
            document.getElementById('{{ form.isTermsPublished.vars.id }}').disabled = publishedTermsAndDepublicationLocked || window.getTermsVersionTitle() === '' || window.getTermsVersionContent() === '';
        }

        window.computeTermsVersionContentStatus = function () {
            {% if termsVersion.enabled %}
                CKEDITOR.instances.terms_version_form_content.setReadOnly();
            {% endif %}
        }

        window.initTermsEdition = function () {
            window.computeTermsPublicationStatus();
        }

        document.getElementById('{{ form.title.vars.id }}').addEventListener('input', window.computeTermsPublicationStatus);
        CKEDITOR.instances.terms_version_form_content.on('change', window.computeTermsPublicationStatus);

        CKEDITOR.instances.terms_version_form_content.on('instanceReady', function () {
            window.computeTermsVersionContentStatus();

            if (CKEDITOR.instances.terms_version_form_content.readOnly) {
                let el = document.getElementById('{{ form.content.vars.id }}');

                el.disabled = false
                el.readOnly = true;
            }
        });

        window.initTermsEdition();
    });
</script>
